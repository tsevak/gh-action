name: Build-UI

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'Select the application: ( Example - nginx ) '
        required: true
      app_version:
        description: 'Define the version:  ( Ex 0.1 or 1.2 or 2. Default: latest )'
        required: true
        default: 'latest'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

    - name: Build Image
      id: dbuild
      uses: docker/build-push-action@v4
      with:
        context: ${{ github.event.inputs.app }}
        load: true
        tags: ${{ secrets.USERNAME }}/${{ github.event.inputs.app }}:${{ github.event.inputs.app_version }}

    - name: Slack Notification if Container build got failed due to build issues
      if: failure() && steps.dbuild.outcome == 'failure'
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Build process failed due to container build is failing..."
                  }
                }
              ]
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


    - name: Run Trivy vulnerability scanner
      id: scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: ${{ secrets.USERNAME }}/${{ github.event.inputs.app }}:${{ github.event.inputs.app_version }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

    - name: Slack Notification after Scan
      if: failure() && steps.scanner.outcome == 'failure'
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Build process failed due to vulerbilities are found in Container Image"
                  }
                }
              ]
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: Push to registry
      uses: docker/build-push-action@v4
      with:
        context: ${{ github.event.inputs.app }}
        push: true
        tags: ${{ secrets.USERNAME }}/${{ github.event.inputs.app }}:${{ github.event.inputs.app_version }}

    - name: Success notification to Slack
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Build process Successfully completed for ${{ secrets.USERNAME }}/${{ github.event.inputs.app }}:${{ github.event.inputs.app_version }} and image pushed to registry"
                  }
                }
              ]
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK